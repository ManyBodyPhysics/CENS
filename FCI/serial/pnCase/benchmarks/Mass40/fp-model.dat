           ** All input data are identified through a text-line which
           ** starts with the two symbols '/' and '*' and ends with ":" or ";"
           ** Additional informative text may be included in the form
           **        <........ Informative text....... >
           ** 

\* Shell model calculation of proton/neutron system -- title: Ni56

<The basic shell data:>

\* The proton number: 8

\* The neutron number: 8

\* Total angular momentum J is (even, odd): even
\* Twice total projection of angular momentum: 0
\* Total parity (+, -): +

\* The number of proton particle j-orbits: 4

	     <n  l  2*j   min_part  max_part energy:>

\* Orbit_Z:   0  3   7       6          8      -8.6240
\* Orbit_Z:   0  3   5       0          2      -1.3829
\* Orbit_Z:   1  1   3       0          2      -5.6793
\* Orbit_Z:   1  1   1       0          2      -4.1370

\* The number of neutron particle j-orbits: 4

	     <n  l  2*j   min_part  max_part energy:>
\* Orbit_N:   0  3   7       6          8      -8.6240
\* Orbit_N:   0  3   5       0          2      -1.3829
\* Orbit_N:   1  1   3       0          2      -5.6793
\* Orbit_N:   1  1   1       0          2      -4.1370

<The data files>

\* Input proton-proton v_effective in J-scheme:   gx_pp.dat
\* Input neutron-neutron v_effective in J-scheme: gx_nn.dat
\* Input proton-neutron v_effective in J-scheme:  gx_pn.dat
      
<Memory and file limitations - set >= ZERO>
wildenthal.pn
\* Memory to store nondiag <SD(Z)SD(N)|OP|SD(Z)SD(N)>(in Kb): 0
\* File size to store nondiag <SD(Z)SD(N)|OP|SD(Z)SD(N)>(in Mb); 0

<Energy eigenvalue parameters>

\* Maximum Lanczos iterations: 30
\* Wanted number of converged eigenstates: 2

    *            Type of process                              Symbol
    * Lanczos iteration based on random initial
    * vector with global orthogonalization             --> random-start
    * Continue a previous random-start process         --> random-continue
    * Lanczos iteration based on generalized seniority
    * initial vector with global orthogonalization     --> fixed-J-start
    * Continue a previous fixed-start process          --> fixed-J-continue

\* Type of calculation process: random-start

           <In case of fixed-J the following data must be specified>

\* Total 2J value: 
\* Init vector file: 
\* Number of start vectors:  
\* List of vector no: 

\* END_OF_INPUT_FILE:





